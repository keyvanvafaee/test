{"version":3,"sources":["HelperComponents/Toastify.jsx","Contexts/AppContext.js","AppComponents/AppModal.js","AppComponents/AddToDo.js","Reducers/AppReducer.js","AppComponents/ToDo.js","AppComponents/TodoState.js","AppComponents/App.js","index.js"],"names":["Toastify","props","type","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","success","warn","info","AppContext","React","createContext","style","textAlign","top","left","transform","width","bgcolor","border","boxShadow","padding","AppModal","_ref","status","_useContext","useContext","state","dispatch","_useState","useState","showModal","_useState2","_slicedToArray","open","_useState3","_objectSpread","theCard","_useState4","setTheCard","console","log","todoDetailRef","useRef","changeTheCard","value","paylod","name","detail","action","payload","current","number","todoCounter","todoNameRef","id","Math","random","timestamp","Date","getTime","setShowModal","createElement","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","Modal","onClose","handleClose","aria-labelledby","aria-describedby","Box","sx","Card","flex","marginTop","CardContent","Typography","variant","component","mt","TextField","size","label","defaultValue","onChange","e","target","TextareaAutosize","ref","aria-label","minRows","placeholder","CardActions","Button","color","startIcon","Icon","onClick","AddToDo","openAppModal","Fragment","Grid","container","xs","inputRef","display","AppReducer","cards","concat","_toConsumableArray","map","card","_console","apply","badges","deleted","completed","showType","ToDo","manager","setManager","backgroundColor","height","fontSize","gutterBottom","event","todoNumber","currentTarget","parentElement","childNodes","innerHTML","filter","completeTodo","editTodo","deleteTodo","TodoState","justifyContent","item","Tooltip","title","Divider","orientation","flexItem","Badge","badgeContent","max","App","val","_useReducer","useReducer","appReducer","nightMode","_useReducer2","sm","md","alignContent","borderRadius","margin","Provider","Zoom","in","transitionDelay","overflow","Content","maxHeight","length","keys","ReactDOM","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.9c117cff.chunk.js","sourcesContent":["import { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction Toastify(props)\r\n{\r\n    switch (props.type)\r\n    {\r\n        case \"error\":\r\n            return toast.error(props.message, {\r\n                position: \"top-right\",\r\n                autoClose: 1000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n            })\r\n        break;\r\n        case \"success\":\r\n            return toast.success(props.message, {\r\n                position: \"top-right\",\r\n                autoClose: 1000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n            });\r\n        break;\r\n        case \"warning\":\r\n            return toast.warn(props.message, {\r\n                position: \"top-right\",\r\n                autoClose: 1000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n            });\r\n        break;\r\n        case \"info\":\r\n            return toast.info(props.message, {\r\n                position: \"top-right\",\r\n                autoClose: 1000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport default Toastify;","import React from \"react\"\r\n\r\nconst AppContext = React.createContext({ });\r\nexport default AppContext;","//---------------------------\r\nimport React, {useContext}           from \"react\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\n//---------------------------\r\nimport {Box ,Typography , Modal, Button , Card, CardActions, CardContent, Icon, TextareaAutosize, TextField} from \"@mui/material\";\r\nimport {ToastContainer} from \"react-toastify\";\r\n//---------------------------\r\nimport Toastify   from \"../HelperComponents/Toastify\";\r\nimport AppContext from \"../Contexts/AppContext\";\r\n//---------------------------\r\nconst style = {\r\n    textAlign : \"center\",\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '300px',\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    padding : \"5px\"\r\n};\r\n\r\nfunction AppModal({status}) {\r\n\r\n    //console.log(`[APP modal] ${status.theCard}`);\r\n    // console.log(status.theCard)\r\n    // useEffect(()=> { console.log(`mount ${props.status.showModal}`)\r\n    //     return ()=> {console.log(\"unmount\")}} , [props.status.showModal] );\r\n    //-------------------------\r\n\r\n    const {state , dispatch} = useContext(AppContext);\r\n    const [open, setOpen]    = useState(status.showModal);\r\n\r\n\r\n    const [theCard , setTheCard] = useState({\r\n        ...status.theCard\r\n\r\n    })\r\n    console.log(theCard);\r\n    const todoDetailRef      = useRef();\r\n    //-------------------------\r\n    const changeTheCard = (value , paylod) =>{\r\n\r\n        switch (paylod)\r\n        {\r\n            case \"name\":\r\n            {\r\n                setTheCard({\r\n                    ...theCard , name: value\r\n                })\r\n            }\r\n            break;\r\n            case \"detail\":\r\n            {\r\n                setTheCard({\r\n                    ...theCard , detail: value\r\n                })\r\n\r\n            }\r\n            break;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    //-------------------------\r\n    const action = () =>\r\n    {\r\n        switch (status.payload)\r\n        {\r\n            case \"ADD\":\r\n            {\r\n                if (todoDetailRef.current.value === '')\r\n                {\r\n                    Toastify({type: \"error\", message: \"Enter ToDo Detail !\"}) //--- Send Signal To Notify Engine\r\n                }\r\n                else\r\n                {\r\n\r\n\r\n                    dispatch({type : \"addToDo\" ,\r\n                        payload : {\r\n                            number    : state.todoCounter +1 ,\r\n                            name      : status.todoNameRef.current.value ,\r\n                            detail    : todoDetailRef.current.value ,\r\n                            id        : Math.random(),\r\n                            status    : \"todo\",\r\n                            timestamp : new Date().getTime()\r\n\r\n\r\n                        }})\r\n\r\n                    status.setShowModal(false);\r\n                    status.todoNameRef.current.value = \"\";\r\n\r\n                }\r\n            }\r\n            break;\r\n            case \"EDIT\":\r\n                {\r\n\r\n                    console.log(\"final \"  , theCard)\r\n                    dispatch({type : \"EditToDo\" , payload : theCard});\r\n                    status.setShowModal(false);\r\n\r\n\r\n                }\r\n            break;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/*-------------- ToastContainer ----------*/}\r\n            <ToastContainer position=\"top-right\"  autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss  draggable pauseOnHover theme=\"light\"/>\r\n            {/*----------------------------------------*/}\r\n            <Modal\r\n                open={open}\r\n                onClose={status.handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Card sx={{flex : \"auto\" , marginTop: \"7px\" }} >\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" component=\"div\">\r\n                                {status.payload == \"ADD\" &&  \"Add Todo information\" }\r\n                                {status.payload == \"EDIT\"&& \"EDIT Todo information\" }\r\n\r\n                            </Typography>\r\n                            <Typography variant=\"h5\" component=\"div\" mt={2}>\r\n                                {status.payload == \"ADD\" && <TextField value={status.todoNameRef.current.value}  size=\"small\" id=\"outlined-basic\" label=\"ToDo name Ex : Reading\" variant=\"outlined\" />}\r\n                                {status.payload == \"EDIT\"&& <TextField defaultValue={theCard.name}  size=\"small\" id=\"outlined-basic\" label=\"Edit name\" variant=\"outlined\"  onChange={(e)=>changeTheCard(e.target.value , \"name\")} />}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" mt={3}>\r\n                                {status.payload == \"ADD\" && <TextareaAutosize ref={todoDetailRef} aria-label=\"minimum height\" minRows={3} placeholder=\"Write Detail\" style={{ width: 200 , padding: '5px'}}/>}\r\n                                {status.payload == \"EDIT\"&& <TextField defaultValue={theCard.detail}  size=\"small\" id=\"outlined-basic\" label=\"Edit Detail\" variant=\"outlined\"   onChange={(e)=>changeTheCard(e.target.value , \"detail\")} />}\r\n\r\n\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            {status.payload == \"ADD\" && <Button variant=\"outlined\" size=\"small\" color=\"success\" startIcon={<Icon>check_circle</Icon>} onClick={()=> action()}> ADD </Button>}\r\n                            {status.payload == \"EDIT\"&& <Button variant=\"outlined\" size=\"small\" color=\"success\" startIcon={<Icon>check_circle</Icon>} onClick={()=> action()}> EDIT </Button>}\r\n\r\n\r\n                        </CardActions>\r\n                    </Card>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\nexport default AppModal;","import React, {useState , useRef , useEffect} from \"react\";\r\n//-------------------------\r\nimport { ToastContainer, toast } from 'react-toastify'; // Notification Lib\r\nimport {Box, TextField, Grid, FormControl , Icon  , Button} from \"@mui/material\";\r\n//-------------------------\r\nimport AppModal from \"./AppModal\";\r\nimport Toastify from \"../HelperComponents/Toastify\";\r\n//-------------------------\r\nfunction AddToDo()\r\n{\r\n\r\n    // useEffect(()=> { console.log(`mount AddTODO`)\r\n    //     return ()=> {console.log(\"Will Unmount\")}} , [] );\r\n\r\n    //---------------------------------------\r\n    const [showModal , setShowModal] = useState(false);\r\n    const handleClose = () =>  openAppModal(false);\r\n    const todoNameRef   = useRef(null);\r\n    //---------------------------------------\r\n    const openAppModal = (value) => todoNameRef.current.value === '' ? Toastify({type:\"error\" , message:\"Enter ToDo Name !\"}) : setShowModal(value);\r\n    //---------------------------------------\r\n    return(\r\n            <>\r\n                {/*-------------- ToastContainer ----------*/}\r\n                <ToastContainer position=\"top-right\"  autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss  draggable pauseOnHover theme=\"light\"/>\r\n                {/*----------------------------------------*/}\r\n                { showModal &&  <AppModal status={{payload :\"ADD\" ,  showModal , setShowModal, handleClose , todoNameRef , theCard :{} }} />}\r\n                {/*----------------------------------------*/}\r\n                <Grid container xs={10} >\r\n                    <TextField inputRef={todoNameRef} sx={{   display : \"flex\" , flex : \"auto\"}} size=\"small\" id=\"outlined-basic\" label=\"Add toDo\" variant=\"outlined\" />\r\n                </Grid >\r\n                <Grid container xs={2} >\r\n                    <Button  variant=\"contained\" color=\"success\" startIcon={<Icon>task_alt</Icon>} onClick={()=>openAppModal(true)}> Add</Button>\r\n                </Grid>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default AddToDo;","import Toastify from \"../HelperComponents/Toastify\";\r\n\r\n\r\nconst AppReducer = (state  , action) =>\r\n{\r\n    switch (action.type) {\r\n        case \"addToDo\" :\r\n            return {\r\n\r\n                ...state,\r\n\r\n                todoCounter: state.todoCounter + 1,\r\n                cards: [...state.cards, action.payload]\r\n\r\n            }\r\n        break;\r\n        case \"EditToDo\" : {\r\n\r\n\r\n            const cards = state.cards.map((card)=>\r\n            {\r\n                if (card.number === action.payload.number)\r\n                {\r\n\r\n                    card = action.payload;\r\n                }\r\n\r\n                return card;\r\n\r\n            });\r\n            Toastify({type: \"info\", message: \"ToDo Edited !\"}) //--- Send Signal To Notify Engine\r\n            return {\r\n\r\n                ...state,\r\n\r\n                cards: [...cards]\r\n            }\r\n        }\r\n        break;\r\n        case \"deleteTodo\":\r\n        {\r\n\r\n            console.log(action);\r\n            // const cards = state.cards.filter(card=> card.number !== action.payload.number);\r\n\r\n            const cards = state.cards.map(card=> {\r\n\r\n                if (card.number == action.payload.number)\r\n                    card.status = \"deleted\"\r\n\r\n                return card;\r\n            }  );\r\n\r\n            console.log(...cards);\r\n\r\n\r\n            Toastify({type: \"warning\", message: \"ToDo Deleted !\"}) //--- Send Signal To Notify Engine\r\n            return {\r\n\r\n                ...state,\r\n                badges : {...state.badges , deleted : state.badges.deleted +1},\r\n                cards: [...cards]\r\n            }\r\n\r\n        }\r\n        break;\r\n        case \"completeTodo\":\r\n        {\r\n            const cards = state.cards.map(card=> {\r\n\r\n                if (card.number == action.payload.number)\r\n\r\n                    card.status = \"completed\";\r\n\r\n\r\n\r\n                return card;\r\n            }  );\r\n\r\n            // console.log(cards);\r\n            Toastify({type: \"success\", message: \"ToDo Imported !\"}) //--- Send Signal To Notify Engine\r\n            return {\r\n\r\n                ...state,\r\n                badges : {...state.badges , completed : state.badges.completed+1},\r\n                cards: [...cards]\r\n            }\r\n        }\r\n        break;\r\n        case \"showTodo\":\r\n        {\r\n            return {\r\n                ...state , showType : \"todo\"\r\n            }\r\n        }\r\n        break;\r\n        case \"showCompleted\":\r\n        {\r\n            return {\r\n                ...state ,\r\n                badges : {...state.badges , completed : 0},\r\n                showType : \"completed\"\r\n            }\r\n        }\r\n        break;\r\n        case \"showDeleted\":\r\n        {\r\n            return {\r\n                ...state ,\r\n                badges : {...state.badges , deleted : 0},\r\n                showType : \"deleted\"\r\n            }\r\n        }\r\n        break;\r\n\r\n    }\r\n}\r\n\r\nexport default AppReducer;","\r\nimport React, {useContext, useRef, useState} from 'react'\r\n//----------------------\r\nimport {Card, CardActions, CardContent, Icon, Typography, Button} from \"@mui/material\";\r\n//----------------------\r\nimport AppModal from \"./AppModal\";\r\nimport AppContext from \"../Contexts/AppContext\";\r\n//----------------------\r\nfunction ToDo(props)\r\n{\r\n\r\n\r\n    const [manager , setManager] = useState({\r\n\r\n        showModal : false,\r\n        theCard : {}\r\n\r\n    });\r\n    const handleClose = () =>  setShowModal(false);\r\n    const {state , dispatch} = useContext(AppContext);\r\n    //-------------------------------\r\n    const setShowModal = (value) => {\r\n\r\n        setManager({...manager , showModal: value});\r\n    }\r\n\r\n    const completeTodo = (event) => {\r\n        const todoNumber = event.currentTarget.parentElement.parentElement.childNodes[0].childNodes[0].innerHTML;\r\n        const theCard = state.cards.filter((card)=> card.number == todoNumber);\r\n        // console.log(theCard[0]);\r\n        dispatch({type : \"completeTodo\" , payload:theCard[0]});\r\n    }\r\n\r\n    const deleteTodo = (event) =>{\r\n\r\n        const todoNumber = event.currentTarget.parentElement.parentElement.childNodes[0].childNodes[0].innerHTML;\r\n\r\n        const theCard = state.cards.filter((card)=> card.number == todoNumber);\r\n\r\n        console.log(theCard);\r\n\r\n        dispatch({type : \"deleteTodo\" , payload:theCard[0]});\r\n\r\n    }\r\n\r\n    const editTodo = (event) => {\r\n\r\n        const todoNumber = event.currentTarget.parentElement.parentElement.childNodes[0].childNodes[0].innerHTML;// --- Find The Number Of Todo\r\n\r\n        //console.log(todoNumber)\r\n        const theCard = state.cards.filter((card)=>\r\n        {\r\n            return card.number == todoNumber ? card : '';\r\n        })\r\n\r\n\r\n        {/*----------------------------------------*/}\r\n        setManager({\r\n            showModal:  true, theCard\r\n        })\r\n\r\n        {/*----------------------------------------*/}\r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {manager.showModal &&  <AppModal status={{payload :\"EDIT\" , showModal : manager.showModal , setShowModal, handleClose , theCard : manager.theCard[0]  }} />}\r\n\r\n            {\r\n\r\n                    ( props.showType === props.status ) ?\r\n                    <Card  sx={{ border :\"1px solid black\",  flex : \"auto\" , marginTop: \"7px\"  , backgroundColor: \"#f0f4c3\\n\" , width :\"100%\" }} >\r\n                        <CardContent sx={{ height : \"60px\"}}>\r\n                            <Typography sx={{fontSize : 12}} color=\"text.secondary\" gutterBottom>\r\n                                {props.number}\r\n                            </Typography>\r\n                            <Typography  component=\"div\">\r\n                                <b> {props.name} </b>\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">\r\n                                {props.detail}\r\n                                <br />\r\n\r\n                            </Typography>\r\n                        </CardContent >\r\n                        {\r\n                            props.status === \"todo\" &&\r\n                            <CardActions >\r\n\r\n                                <>\r\n                                    <Button variant=\"outlined\" size=\"small\" color=\"success\"\r\n                                            startIcon={<Icon>check_circle</Icon>}\r\n                                            onClick={(event) => completeTodo(event)}> Finish</Button>\r\n                                    <Button variant=\"outlined\" size=\"small\" color=\"primary\" startIcon={<Icon>edit</Icon>}\r\n                                            onClick={(event) => editTodo(event)}> Edit </Button>\r\n                                    <Button variant=\"outlined\" size=\"small\" color=\"error\" startIcon={<Icon>delete</Icon>}\r\n                                            onClick={(event) => deleteTodo(event)}> Delete</Button>\r\n                                </>\r\n                            </CardActions>\r\n                        }\r\n                    </Card> : \"\"\r\n            }\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport default ToDo;","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport {useContext, useState} from \"react\";\r\nimport AppContext from \"../Contexts/AppContext\";\r\nimport {Badge, Divider, Icon} from \"@mui/material\";\r\n\r\nexport default function TodoState() {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const {state , dispatch} = useContext(AppContext);\r\n\r\n    const handleTooltipClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleTooltipOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container justifyContent=\"center\">\r\n\r\n\r\n                    <Grid item>\r\n                        <Tooltip  title=\"show remained todo\">\r\n\r\n                            <Button  startIcon={<Icon>task</Icon>} onClick={()=> dispatch({type : \"showTodo\" })} >ToDo </Button>\r\n                        </Tooltip>\r\n\r\n                    </Grid>\r\n                <Divider orientation=\"vertical\" flexItem/>\r\n                <Badge badgeContent={state.badges.completed} color=\"success\"  max={3}>\r\n                    <Grid item>\r\n                        <Tooltip  title=\"show completed todo\">\r\n                            <Button   startIcon={<Icon>done_all</Icon>} onClick={()=> dispatch({type : \"showCompleted\"})}>Completed</Button>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </Badge>\r\n                <Divider orientation=\"vertical\" flexItem/>\r\n                <Badge badgeContent={state.badges.deleted} color=\"warning\"  max={3}>\r\n                    <Grid item>\r\n                        <Tooltip   title=\"show deleted todo\">\r\n                            <Button startIcon={<Icon>delete</Icon>} onClick={()=> dispatch({type : \"showDeleted\" })}> Deleted</Button>\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </Badge>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","\n//------ USED CONTEXT + REDUCERS + MUI\n//----------------------------------            --- React BIF Components ---\nimport React, {useEffect, useReducer, useState} from \"react\";\n//----------------------------------            --- React External Components ---\nimport {Box, Button, Fade, Grid, Grow, Icon, Pagination, PaginationItem, Slide, Zoom} from \"@mui/material\";\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\n//----------------------------------            --- MY React Components ---\nimport AddToDo from \"./AddToDo\";\n\n//----------------------------------            --- Reducers + Contexts ---\nimport AppContext from \"../Contexts/AppContext\";\nimport appReducer from \"../Reducers/AppReducer\";\nimport ToDo from \"./ToDo\";\nimport TodoState from \"./TodoState\";\n\n\n//----------------------------------\n\n\nfunction App()\n{\n\n\n\n    const cardsLength = (val) => state.cards.filter(card=> card.status === val);\n\n    const [state , dispatch] = useReducer(appReducer , {\n        nightMode : false ,\n        showType : \"todo\",\n        badges : {completed : 0 , deleted : 0},\n        todoCounter : 3,\n        cards : [   {number : 1 , name : \"ToDo One\"   , detail:\"Detail about todo one\"    , status : \"todo\" , id : Math.random() , timestamp : new Date().getTime() },\n                    {number : 2 , name : \"Todo Two\"   , detail:\"Detail about todo two\"    , status : \"todo\" , id : Math.random() , timestamp : new Date().getTime() },\n                    {number : 3 , name : \"Todo Three\" , detail:\"Detail about todo three\"  , status : \"todo\" , id : Math.random() , timestamp : new Date().getTime() },\n\n        ]});\n\n\n\n\n\n\n\n\n    return(\n        <Grid container xs={12} sm={9} md={6} sx={{ bgcolor: \"#f1f8e9\\n\" ,  alignContent : \"start\",  border : \"2px solid gray\"   , height: \"500px\" , borderRadius : \"10px\" , margin : \"30px auto\"}}  >\n\n\n\n            <Grid container  xs={12} sm={9} md={6} margin=\"30px auto\"  padding=\"10px\" >\n                    <AppContext.Provider value={{state  , dispatch}}>\n                        <AddToDo />\n\n\n                        <Box   border=\"1px solid  gray\" margin=\"15px auto\" borderRadius=\"10px\">\n                            <TodoState/>\n                        </Box>\n\n\n                        <Zoom in={state.cards} style={{ transitionDelay: '500ms' }}>\n                                <Grid  overflow=\"auto\"   Content=\"center\" container maxHeight=\"340px\"    padding={1} >\n                                    {\n                                        cardsLength(state.showType).length ?\n                                            state.cards.map( (card) =>  (\n\n                                                <ToDo  keys={card.id} showType={state.showType}  status={card.status} number = {card.number} name={card.name} detail ={card.detail} />  ))\n\n                                            : <div style={{margin:\"auto\"}}>\n\n                                                    There is no todo <br/>\n\n                                                </div>\n                                    }\n                                </Grid>\n\n                        </Zoom>\n\n\n\n                    </AppContext.Provider>\n            </Grid>\n        </Grid>\n    )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport {HashRouter as Router} from \"react-router-dom\";\nimport App from './AppComponents/App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <Router>\n        <App />\n    </Router>\n\n\n);\n\n\n"],"sourceRoot":""}